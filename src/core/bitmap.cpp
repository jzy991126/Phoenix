//
// Created by jzy99 on 2021/1/23.
//

#include<phoenix/core/bitmap.h>

#include <ImfInputFile.h>
#include <ImfOutputFile.h>
#include <ImfChannelList.h>
#include <ImfStringAttribute.h>
#include <ImfIO.h>
#include<phoenix/core/common.h>
#define STB_IMAGE_WRITE_IMPLEMENTATION
#include <stb/stb_image_write.h>

PHOENIX_NAMESPACE_BEGIN

void Bitmap::SaveEXR(const std::string &filename) {
  spdlog::info("Writing a {} x {} OpenEXR file to {}", cols(), rows(), filename);

  std::string path = filename + ".exr";

  Imf::Header header((int) cols(), (int) rows());
  header.insert("comments", Imf::StringAttribute("Generated by Nori"));

  Imf::ChannelList &channels = header.channels();
  channels.insert("R", Imf::Channel(Imf::FLOAT));
  channels.insert("G", Imf::Channel(Imf::FLOAT));
  channels.insert("B", Imf::Channel(Imf::FLOAT));

  Imf::FrameBuffer frameBuffer;
  size_t compStride = sizeof(float),
      pixelStride = 3 * compStride,
      rowStride = pixelStride * cols();

  char *ptr = reinterpret_cast<char *>(data());
  frameBuffer.insert("R", Imf::Slice(Imf::FLOAT, ptr, pixelStride, rowStride));
  ptr += compStride;
  frameBuffer.insert("G", Imf::Slice(Imf::FLOAT, ptr, pixelStride, rowStride));
  ptr += compStride;
  frameBuffer.insert("B", Imf::Slice(Imf::FLOAT, ptr, pixelStride, rowStride));

  Imf::OutputFile file(path.c_str(), header);
  file.setFrameBuffer(frameBuffer);
  file.writePixels((int) rows());
}

void Bitmap::SavePNG(const string &filename) {
  spdlog::info("Writing a {} x {} PNG file to {}", cols(), rows(), filename);

  std::string path = filename + ".png";

  uint8_t *rgb8 = new uint8_t[3 * cols() * rows()];
  uint8_t *dst = rgb8;
  for (int i = 0; i < rows(); ++i) {
    for (int j = 0; j < cols(); ++j) {
      Color3f tonemapped = coeffRef(i, j).toSRGB();
      dst[0] = (uint8_t) Clamp(255.f * tonemapped[0], 0.f, 255.f);
      dst[1] = (uint8_t) Clamp(255.f * tonemapped[1], 0.f, 255.f);
      dst[2] = (uint8_t) Clamp(255.f * tonemapped[2], 0.f, 255.f);
      dst += 3;
    }
  }

  int ret = stbi_write_png(path.c_str(), (int) cols(), (int) rows(), 3, rgb8, 3 * (int) cols());
  if (ret == 0) {
    spdlog::error("Could not save PNG file {}", filename);
  }

  delete[] rgb8;
}

PHOENIX_NAMESPACE_END