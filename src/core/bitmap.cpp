//
// Created by jzy99 on 2021/1/23.
//

#include<phoenix/core/bitmap.h>

#include <ImfInputFile.h>
#include <ImfOutputFile.h>
#include <ImfChannelList.h>
#include <ImfStringAttribute.h>
#include <ImfVersion.h>
#include <ImfIO.h>
#include<spdlog/spdlog.h>

PHOENIX_NAMESPACE_BEGIN

void Bitmap::SaveEXR(const std::string &filename) {
  spdlog::info("Writing a {} x {} OpenEXR file to {}",cols(),rows(),filename);

  std::string path = filename + ".exr";

  Imf::Header header((int) cols(), (int) rows());
  header.insert("comments", Imf::StringAttribute("Generated by Nori"));

  Imf::ChannelList &channels = header.channels();
  channels.insert("R", Imf::Channel(Imf::FLOAT));
  channels.insert("G", Imf::Channel(Imf::FLOAT));
  channels.insert("B", Imf::Channel(Imf::FLOAT));

  Imf::FrameBuffer frameBuffer;
  size_t compStride = sizeof(float),
      pixelStride = 3 * compStride,
      rowStride = pixelStride * cols();

  char *ptr = reinterpret_cast<char *>(data());
  frameBuffer.insert("R", Imf::Slice(Imf::FLOAT, ptr, pixelStride, rowStride)); ptr += compStride;
  frameBuffer.insert("G", Imf::Slice(Imf::FLOAT, ptr, pixelStride, rowStride)); ptr += compStride;
  frameBuffer.insert("B", Imf::Slice(Imf::FLOAT, ptr, pixelStride, rowStride));

  Imf::OutputFile file(path.c_str(), header);
  file.setFrameBuffer(frameBuffer);
  file.writePixels((int) rows());
}


PHOENIX_NAMESPACE_END